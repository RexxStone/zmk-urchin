/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_german.h"

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define OH1 5
	#define OH2 6
	#define OH3 7
	#define SETTINGS 8
	#define GAME 9
	#define GAME2 10
// -----------------

&sk {
    // don't release mods on other mods presses
    ignore-modifiers;
};
&sl {
    release-after-ms = <1000>;
};

/ {
	behaviors {
        apexcl: apos_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "APOS_EXCL";
            #binding-cells = <0>;
            bindings = <&kp DE_APOS>, <&kp DE_EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slaqm: slash_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_QMARK";
            #binding-cells = <0>;
            bindings = <&kp DE_SLASH>, <&kp DE_QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

		kp_sl: behavior_kp_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "kp_sl";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&sl>;
        };

		mo_kp: behavior_mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_kp";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <180>;
            bindings = <&mo>, <&kp>;
        };

		// separate sticky behavior for lazy keys
		sk_lazy: behavior_sk_lazy {
			compatible = "zmk,behavior-sticky-key";
			label = "sk_lazy";
			#binding-cells = <1>;
			bindings = <&kp>;
    		release-after-ms = <1000>;
    		ignore-modifiers;
			lazy;
		};

		// for alt key
		sk_nl: behaviour_sk_nolazy_hold {
			compatible = "zmk,behavior-hold-tap";
            label = "sk_nl";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&sk>;
			hold-while-undecided;
			hold-while-undecided-linger;
		};

		// for shift + ctrl keys 
		sk_lh: behaviour_sk_lazy_hold {
			compatible = "zmk,behavior-hold-tap";
            label = "sk_lh";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&sk_lazy>;
			hold-while-undecided;
		};

		// for gui key
		sk_nh: behaviour_sk_lazy_nohold {
			compatible = "zmk,behavior-hold-tap";
            label = "sk_nh";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&sk_lazy>;
		};
    };
	
    macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
    };

    combos {
		compatible = "zmk,combos";
		// both right thumb keys
        combo_accent {
			timeout-ms = <50>;
			key-positions = <32 33>;
			layers = <BASE>;
			bindings = <&to GAME>;
        };
		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <50>;
			key-positions = <31 33>;
			layers = <BASE SYM EXT FNC SYM2 SETTINGS>;
			bindings = <&mo SYM2>;
		};
		// both left thumb keys
		combo_settings {
			timeout-ms = <50>;
			key-positions = <30 31>;
			layers = <BASE SYM EXT FNC SYM2 SETTINGS>;
			bindings = <&mo SETTINGS>;
		};
    };

    keymap {
		compatible = "zmk,keymap";

        // Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q &kp W &kp F &kp P			   &kp B				&kp J     &kp L  &kp U     &kp Z   &apexcl
			&kp A &kp R &kp S &kp T   		   &kp G				&kp M     &kp N  &kp E     &kp I   &kp O
			&kp Y &kp X &kp C &kp D   		   &kp V				&kp K     &kp H  &kp COMMA &kp DOT &slaqm
							  &mo_kp EXT SPACE &kp_sl LSHIFT OH1	&kp SPACE &mo SYM
			>;
		};

        // Numbers and high frequency symbols
		sym_layer {
			label = "Sym.";
			bindings = <
			&kp DE_UUML &kp DE_LT 	&kp DE_EQUAL &kp DE_GT 	 &kp DE_PLUS	&kp DE_AMPS  &kp N7 &kp N8 &kp N9 &kp DE_DQT
			&kp DE_AUML &kp DE_LBRC &kp DE_LBKT  &kp DE_LPAR &kp DE_MINUS	&kp DE_UNDER &kp N4 &kp N5 &kp N6 &kp N0
			&kp DE_OUML &kp DE_RBRC	&kp DE_RBKT  &kp DE_RPAR &kp DE_ASTRK 	&kp DE_HASH  &kp N1 &kp N2 &kp N3 &kp DE_SZ
												 &mo FNC	 &mo SYM2       &trans 		 &trans
			>;
		};

        // Main modifiers and arrow keys
		ext_layer {
			label = "Mods";
			bindings = <
			&kp ESC          &kp C_PREV       &kp C_PP             &kp C_NEXT         &kp LC(DE_Y)	&kp PG_UP    &kp HOME &kp UP          &kp END   &kp CAPS
			&sk_nl LALT LALT &sk_nh LGUI LGUI &sk_lh LSHIFT LSHIFT &sk_lh LCTRL LCTRL &kp DEL		&kp PG_DN    &kp LEFT &kp DOWN        &kp RIGHT &kp DEL
			&kp LC(DE_Z)     &kp LC(X)        &kp LC(C)            &kp TAB            &kp LC(V)     &kp LC(BSPC) &kp BSPC &kp PAUSE_BREAK &kp PSCRN	&kp LC(DEL)
											                       &trans 	          &none		    &kp ENTER    &mo FNCq
			>;
		};

        // Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			&none 	 &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &none		&none &kp F7 &kp F8 &kp F9 &kp F12
			&sk LALT &sk LGUI 	  &sk LSHIFT &sk LCTRL 	  &sk RALT  &none &kp F4 &kp F5 &kp F6 &kp F11
			&none 	 &kp C_BRI_DN &none 	 &kp C_BRI_UP &none		&none &kp F1 &kp F2 &kp F3 &kp F10
							  	  			 &none		  &none		&none &none
			>;
		};

        // Low frequency symbols.
		symbols_2_layer {
			label = "Sym.2";
			bindings = <
			&kp DE_CUUML &kp DE_ACU  &kp DE_CARET &kp DE_GRAVE &kp DE_TILDE		&none &none &none		&none	   &none
			&kp DE_CAUML &kp DE_AT   &kp DE_PRCNT &kp DE_EUR   &kp DE_PIPE		&none &none &none 		&none 	   &kp DE_CSZ
			&kp DE_COUML &kp DE_SECT &kp DE_DEG   &kp DE_DLLR  &kp DE_MY    	&none &none &kp DE_SQRD &kp DE_QBD &kp DE_BSLH
												  &none		   &none        	&none &none 
			>;
		};

        // Used for one handed typing
		one_handed_1_layer {
				label = "OH.1";
				bindings = <
				&apexcl &kp Z	&kp U	  &kp L	   &kp J	&trans &trans &trans &trans &trans
				&kp O	&kp I	&kp E	  &kp N    &kp M	&trans &trans &trans &trans &trans
				&slaqm  &kp DOT &kp COMMA &kp H	   &kp K	&trans &trans &trans &trans &trans
										  &kp BSPC &trans 	&trans &trans
				>;
		};
		one_handed_2_layer {
				label = "OH.2";
				bindings = <
				&kp DE_DQT &kp N7 &kp N8 &kp N9    &kp DE_AMPS	&none &none &none &none &none
				&kp N0	   &kp N4 &kp N5 &kp N6    &kp DE_UNDER	&none &none &none &none &none
				&kp DE_SZ  &kp N1 &kp N2 &kp N3    &kp DE_HASH	&none &none &none &none &none
								  		 &kp ENTER &sl OH3		&none &none
				>;
		};
		one_handed_3_layer {
				label = "OH.3";
				bindings = <
				&kp DE_UUML &kp DE_LT 	&kp DE_EQUAL &kp DE_GT 	 &kp DE_PLUS		&none &none &none &none &none
				&kp DE_AUML &kp DE_LBRC &kp DE_LBKT  &kp DE_LPAR &kp DE_MINUS		&none &none &none &none &none
				&kp DE_OUML &kp DE_RBRC	&kp DE_RBKT  &kp DE_RPAR &kp DE_ASTRK 		&none &none &none &none &none
								  					 &none 		 &caps_word			&none &none 
				>;
		};

        // Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0		&bt BT_SEL 3 &none &unstick &none &bootloader 
				&none 		&none &none &none      &bt BT_SEL 1		&bt BT_SEL 4 &none &none 	&none &none
				&none 		&none &none &none      &bt BT_SEL 2		&bt BT_SEL 5 &none &none 	&none &none
										&none 	   &none			&none 		 &none 
				>;
		};

		// Used for Gaming.
		gaming_layer {
			label = "Gaming";
			bindings = <
			&kp TAB    &kp Q &kp W &kp E 	 &kp R		&to BASE &none 	  &kp UP   &none 	 &none 
			&kp LSHIFT &kp A &kp S &kp D 	 &kp F		&to BASE &kp LEFT &kp DOWN &kp RIGHT &kp RSHIFT
			&kp LCTRL  &kp Y &kp X &kp C	 &kp V		&to BASE &kp BSPC &none    &none 	 &kp RCTRL
							  	   &mo GAME2 &kp SPACE  &to BASE &to BASE 
			>;
		};
		
		gaming_2_layer {
			label = "Gaming2";
			bindings = <
			&kp ESC   &kp N1 &kp N2 &kp N3 &kp T	&kp Z &kp U &kp I 	  &kp O   &kp P 
			&kp ENTER &kp N4 &kp N5 &kp N6 &kp G	&kp H &kp J &kp K 	  &kp L   &kp DE_PLUS
			&kp LALT  &kp N7 &kp N8 &kp N9 &kp B	&kp N &kp M &kp COMMA &kp DOT &kp DE_MINUS
							  		&trans &none	&none &none 
			>;
		};
	};
};
